# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mumble_link_server.models.base_model_ import Model
from mumble_link_server import util


class ServerCreatePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, max_users=None, server_password=None, superuser_password=None):  # noqa: E501
        """ServerCreatePostRequest - a model defined in OpenAPI

        :param name: The name of this ServerCreatePostRequest.  # noqa: E501
        :type name: str
        :param max_users: The max_users of this ServerCreatePostRequest.  # noqa: E501
        :type max_users: int
        :param server_password: The server_password of this ServerCreatePostRequest.  # noqa: E501
        :type server_password: str
        :param superuser_password: The superuser_password of this ServerCreatePostRequest.  # noqa: E501
        :type superuser_password: str
        """
        self.openapi_types = {
            'name': str,
            'max_users': int,
            'server_password': str,
            'superuser_password': str
        }

        self.attribute_map = {
            'name': 'name',
            'max_users': 'max_users',
            'server_password': 'server_password',
            'superuser_password': 'superuser_password'
        }

        self._name = name
        self._max_users = max_users
        self._server_password = server_password
        self._superuser_password = superuser_password

    @classmethod
    def from_dict(cls, dikt) -> 'ServerCreatePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _server_create_post_request of this ServerCreatePostRequest.  # noqa: E501
        :rtype: ServerCreatePostRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ServerCreatePostRequest.


        :return: The name of this ServerCreatePostRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServerCreatePostRequest.


        :param name: The name of this ServerCreatePostRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def max_users(self):
        """Gets the max_users of this ServerCreatePostRequest.


        :return: The max_users of this ServerCreatePostRequest.
        :rtype: int
        """
        return self._max_users

    @max_users.setter
    def max_users(self, max_users):
        """Sets the max_users of this ServerCreatePostRequest.


        :param max_users: The max_users of this ServerCreatePostRequest.
        :type max_users: int
        """
        if max_users is None:
            raise ValueError("Invalid value for `max_users`, must not be `None`")  # noqa: E501

        self._max_users = max_users

    @property
    def server_password(self):
        """Gets the server_password of this ServerCreatePostRequest.


        :return: The server_password of this ServerCreatePostRequest.
        :rtype: str
        """
        return self._server_password

    @server_password.setter
    def server_password(self, server_password):
        """Sets the server_password of this ServerCreatePostRequest.


        :param server_password: The server_password of this ServerCreatePostRequest.
        :type server_password: str
        """

        self._server_password = server_password

    @property
    def superuser_password(self):
        """Gets the superuser_password of this ServerCreatePostRequest.


        :return: The superuser_password of this ServerCreatePostRequest.
        :rtype: str
        """
        return self._superuser_password

    @superuser_password.setter
    def superuser_password(self, superuser_password):
        """Sets the superuser_password of this ServerCreatePostRequest.


        :param superuser_password: The superuser_password of this ServerCreatePostRequest.
        :type superuser_password: str
        """

        self._superuser_password = superuser_password
